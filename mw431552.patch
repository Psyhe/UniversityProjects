diff -rupNEZbB original_source/usr/include/minix/callnr.h my_solution/usr/include/minix/callnr.h
--- original_source/usr/include/minix/callnr.h	2014-09-14 11:00:44.000000000 +0200
+++ my_solution/usr/include/minix/callnr.h	2023-05-14 21:38:02.000000000 +0200
@@ -59,7 +59,13 @@
 #define PM_GETPROCNR		(PM_BASE + 46)
 #define PM_GETSYSINFO		(PM_BASE + 47)
 
-#define NR_PM_CALLS		48	/* highest number from base plus one */
+/* Changed by mw431552
+PM_TRANSFER_MONEY added, NR_PM_CALLS updated */
+#define PM_TRANSFER_MONEY    (PM_BASE + 48)
+
+#define NR_PM_CALLS		49	/* highest number from base plus one */
+
+// #define NR_PM_CALLS		48	/* highest number from base plus one */
 
 /*===========================================================================*
  *				Calls to VFS				     *
diff -rupNEZbB original_source/usr/include/minix/config.h my_solution/usr/include/minix/config.h
--- original_source/usr/include/minix/config.h	2014-09-14 11:00:44.000000000 +0200
+++ my_solution/usr/include/minix/config.h	2023-05-14 21:38:02.000000000 +0200
@@ -95,4 +95,8 @@
 #define NR_PCIBUS 40
 #define NR_PCIDEV 50
 
+/* My change mw431552. */
+#define INIT_BALANCE      100
+#define MAX_BALANCE       1000
+
 #endif /* _CONFIG_H */
diff -rupNEZbB original_source/usr/include/minix/ipc.h my_solution/usr/include/minix/ipc.h
--- original_source/usr/include/minix/ipc.h	2014-09-14 11:00:44.000000000 +0200
+++ my_solution/usr/include/minix/ipc.h	2023-05-14 21:38:02.000000000 +0200
@@ -2023,6 +2023,15 @@ typedef struct {
 } mess_vmmcp_reply;
 _ASSERT_MSG_SIZE(mess_vmmcp_reply);
 
+/* Changed by mw431552*/
+typedef struct {
+	pid_t new_pid;
+	int new_int;
+	uint8_t padding[48];
+} my_message;
+_ASSERT_MSG_SIZE(my_message);
+
+
 typedef struct {
 	endpoint_t m_source;		/* who sent the message */
 	int m_type;			/* what kind of message is it */
@@ -2251,6 +2260,7 @@ typedef struct {
 		mess_vm_vfs_mmap	m_vm_vfs_mmap;
 		mess_vmmcp		m_vmmcp;
 		mess_vmmcp_reply	m_vmmcp_reply;
+		my_message 			m_my_message;
 
 		u8_t size[56];	/* message payload may have 56 bytes at most */
 	};
@@ -2321,6 +2331,10 @@ typedef int _ASSERT_message[/* CONSTCOND
 #define m10_l3 m_m10.m10l3
 #define m10_ull1 m_m10.m10ull1
 
+/* Changed by mw431552*/
+#define my_m1      m_my_message.new_pid
+#define my_m2      m_my_message.new_int
+
 
 /*==========================================================================* 
  * Minix run-time system (IPC). 					    *
diff -rupNEZbB original_source/usr/include/unistd.h my_solution/usr/include/unistd.h
--- original_source/usr/include/unistd.h	2014-09-14 11:00:43.000000000 +0200
+++ my_solution/usr/include/unistd.h	2023-05-14 21:38:02.000000000 +0200
@@ -411,5 +411,9 @@ extern	 int optreset;		/* getopt(3) exte
 extern	 char *suboptarg;	/* getsubopt(3) external variable */
 #endif
 
+
+int transfermoney(pid_t recipient, int amount);
+/* Changed by mw431552 */
+
 __END_DECLS
 #endif /* !_UNISTD_H_ */
diff -rupNEZbB original_source/usr/src/include/unistd.h my_solution/usr/src/include/unistd.h
--- original_source/usr/src/include/unistd.h	2014-09-13 23:56:50.000000000 +0200
+++ my_solution/usr/src/include/unistd.h	2023-05-14 21:38:02.000000000 +0200
@@ -411,5 +411,9 @@ extern	 int optreset;		/* getopt(3) exte
 extern	 char *suboptarg;	/* getsubopt(3) external variable */
 #endif
 
+
+int transfermoney(pid_t recipient, int amount);
+/* Changed by mw431552 */
+
 __END_DECLS
 #endif /* !_UNISTD_H_ */
diff -rupNEZbB original_source/usr/src/lib/libc/misc/Makefile.inc my_solution/usr/src/lib/libc/misc/Makefile.inc
--- original_source/usr/src/lib/libc/misc/Makefile.inc	2014-09-13 23:56:50.000000000 +0200
+++ my_solution/usr/src/lib/libc/misc/Makefile.inc	2023-05-14 21:40:53.405237000 +0200
@@ -8,3 +8,6 @@ SRCS+=	initfini.c
 
 # for -fstack-protector
 SRCS+=	stack_protector.c
+
+# Changed by mw431552.
+SRCS+= transfermoney.c
diff -rupNEZbB original_source/usr/src/lib/libc/misc/transfermoney.c my_solution/usr/src/lib/libc/misc/transfermoney.c
--- original_source/usr/src/lib/libc/misc/transfermoney.c	1970-01-01 01:00:00.000000000 +0100
+++ my_solution/usr/src/lib/libc/misc/transfermoney.c	2023-05-14 21:40:56.337259000 +0200
@@ -0,0 +1,85 @@
+// #include <lib.h>
+// #include <minix/rs.h>
+
+// /* Changed by mw431552. */
+// int get_pm_endpt(endpoint_t *pt)
+// {
+//     return minix_rs_lookup("pm", pt);
+// }
+
+// int transfermoney(pid_t recipient, int amount) {
+//     endpoint_t pm_pt;
+//     message m;
+
+//     m.my_m1 = recipient;     
+//     m.my_m2 = amount;
+
+//     if (get_pm_endpt(&pm_pt) != 0){
+//         errno = ESRCH;
+//         return -1;
+//     }
+
+//     return (_syscall(pm_pt, PM_TRANSFER_MONEY, &m));
+// }
+
+// int transfermoney(pid_t recipient, int amount)
+// {
+//     endpoint_t pm_pt;
+//     message m;
+//     // m.m_m1.m1i1 = recipient;
+//     // m.m_m1.m1i2 = amount;
+
+//     m.my_m1 = recipient;
+//     m.my_m2 = amount;
+
+//     // m.m1_i1 = recipient;
+//     // m.m1_i2 = amount;
+//     // Is it correct to use get_pm_endpt() here and ENOSYS?
+//     // if (get_ipm_endpt(&pm_pt) != 0)
+//     // {
+//     //     errno = ENOSYS;
+//     //     return -1;
+//     // }
+
+
+//     return (_syscall(PM_PROC_NR, PM_TRANSFER_MONEY, &m));
+
+
+//     // return (_syscall(pm_pt, PM_TRANSFER_MONEY, &m));
+// }
+
+#include <lib.h>
+#include <minix/rs.h>
+
+/* Changed by mw431552 */
+
+// int get_pm_endpt(endpoint_t *pt)
+// {
+//     return minix_rs_lookup("pm", pt);
+// }
+
+int transfermoney(pid_t recipient, int amount)
+{
+    endpoint_t pm_pt;
+    message m;
+    // m.m_m1.m1i1 = recipient;
+    // m.m_m1.m1i2 = amount;
+
+    m.my_m1 = recipient;
+    m.my_m2 = amount;
+
+    // m.m1_i1 = recipient;
+    // m.m1_i2 = amount;
+    // Is it correct to use get_pm_endpt() here and ENOSYS?
+    // if (get_ipm_endpt(&pm_pt) != 0)
+    // {
+    //     errno = ENOSYS;
+    //     return -1;
+    // }
+
+
+    return (_syscall(PM_PROC_NR, PM_TRANSFER_MONEY, &m));
+
+
+    // return (_syscall(pm_pt, PM_TRANSFER_MONEY, &m));
+}
\ No newline at end of file
diff -rupNEZbB original_source/usr/src/minix/include/minix/callnr.h my_solution/usr/src/minix/include/minix/callnr.h
--- original_source/usr/src/minix/include/minix/callnr.h	2014-09-13 23:56:50.000000000 +0200
+++ my_solution/usr/src/minix/include/minix/callnr.h	2023-05-14 21:38:02.000000000 +0200
@@ -59,7 +59,13 @@
 #define PM_GETPROCNR		(PM_BASE + 46)
 #define PM_GETSYSINFO		(PM_BASE + 47)
 
-#define NR_PM_CALLS		48	/* highest number from base plus one */
+/* Changed by mw431552
+PM_TRANSFER_MONEY added, NR_PM_CALLS updated */
+#define PM_TRANSFER_MONEY    (PM_BASE + 48)
+
+#define NR_PM_CALLS		49	/* highest number from base plus one */
+
+// #define NR_PM_CALLS		48	/* highest number from base plus one */
 
 /*===========================================================================*
  *				Calls to VFS				     *
diff -rupNEZbB original_source/usr/src/minix/include/minix/config.h my_solution/usr/src/minix/include/minix/config.h
--- original_source/usr/src/minix/include/minix/config.h	2014-09-13 23:56:50.000000000 +0200
+++ my_solution/usr/src/minix/include/minix/config.h	2023-05-14 21:38:02.000000000 +0200
@@ -95,4 +95,8 @@
 #define NR_PCIBUS 40
 #define NR_PCIDEV 50
 
+/* My change mw431552. */
+#define INIT_BALANCE      100
+#define MAX_BALANCE       1000
+
 #endif /* _CONFIG_H */
diff -rupNEZbB original_source/usr/src/minix/include/minix/ipc.h my_solution/usr/src/minix/include/minix/ipc.h
--- original_source/usr/src/minix/include/minix/ipc.h	2014-09-13 23:56:50.000000000 +0200
+++ my_solution/usr/src/minix/include/minix/ipc.h	2023-05-14 21:38:02.000000000 +0200
@@ -2023,6 +2023,15 @@ typedef struct {
 } mess_vmmcp_reply;
 _ASSERT_MSG_SIZE(mess_vmmcp_reply);
 
+/* Changed by mw431552*/
+typedef struct {
+	pid_t new_pid;
+	int new_int;
+	uint8_t padding[48];
+} my_message;
+_ASSERT_MSG_SIZE(my_message);
+
+
 typedef struct {
 	endpoint_t m_source;		/* who sent the message */
 	int m_type;			/* what kind of message is it */
@@ -2251,6 +2260,7 @@ typedef struct {
 		mess_vm_vfs_mmap	m_vm_vfs_mmap;
 		mess_vmmcp		m_vmmcp;
 		mess_vmmcp_reply	m_vmmcp_reply;
+		my_message 			m_my_message;
 
 		u8_t size[56];	/* message payload may have 56 bytes at most */
 	};
@@ -2321,6 +2331,10 @@ typedef int _ASSERT_message[/* CONSTCOND
 #define m10_l3 m_m10.m10l3
 #define m10_ull1 m_m10.m10ull1
 
+/* Changed by mw431552*/
+#define my_m1      m_my_message.new_pid
+#define my_m2      m_my_message.new_int
+
 
 /*==========================================================================* 
  * Minix run-time system (IPC). 					    *
diff -rupNEZbB original_source/usr/src/minix/servers/pm/do_transfer_money.c my_solution/usr/src/minix/servers/pm/do_transfer_money.c
--- original_source/usr/src/minix/servers/pm/do_transfer_money.c	1970-01-01 01:00:00.000000000 +0100
+++ my_solution/usr/src/minix/servers/pm/do_transfer_money.c	2023-05-14 21:41:48.597639000 +0200
@@ -0,0 +1,85 @@
+#include <minix/config.h>
+#include "pm.h"
+#include <minix/callnr.h>
+#include <signal.h>
+#include <sys/svrctl.h>
+#include <sys/reboot.h>
+#include <sys/resource.h>
+#include <sys/utsname.h>
+#include <minix/com.h>
+#include <minix/sysinfo.h>
+#include <minix/type.h>
+#include <minix/ds.h>
+#include <machine/archtypes.h>
+#include <lib.h>
+#include <assert.h>
+#include "mproc.h"
+
+int ancestor(struct mproc *first, struct mproc *last) {
+    if (first->mp_pid == last->mp_pid) {
+        return 1;
+    }
+
+    while (first->mp_pid != 1) {
+        if (first->mp_pid == last->mp_pid) {
+            return -1;
+        }
+        first = &mproc[first->mp_parent];
+    }
+
+    if (first->mp_pid == last->mp_pid) {
+        return -1;
+    }
+
+    return 1;
+}
+
+int do_transfer_money(void) {
+    pid_t recipient = m_in.my_m1;
+    int amount = m_in.my_m2;
+
+    pid_t my_pid = mproc[who_p].mp_pid;
+
+    struct mproc *my_process = find_proc(my_pid);
+    struct mproc *recipient_process = find_proc(recipient);
+
+    if (my_process == NULL) {
+        return ESRCH;
+    }
+
+    if (recipient_process == NULL) {
+        return ESRCH;
+    }
+
+    if (ancestor(my_process, recipient_process) == -1) {
+        return EPERM;
+    }
+
+    if (ancestor(recipient_process, my_process) == -1) {
+        return EPERM;
+    }
+
+    if (amount < 0) {
+        return EINVAL;
+    }
+
+    for (int i = 0; i < NR_PROCS; i++) {
+        if (mproc[i].mp_pid == recipient) {
+
+            if (mproc[i].balance > MAX_BALANCE - amount) {
+                return EINVAL;
+            }
+            else if (mproc[who_p].balance < amount) {
+                return EINVAL;
+            }
+            else {
+                mproc[i].balance += amount;
+                mproc[who_p].balance -= amount;
+                return mproc[who_p].balance;
+            }
+            
+        }
+    }
+
+    return ESRCH;
+}
\ No newline at end of file
diff -rupNEZbB original_source/usr/src/minix/servers/pm/forkexit.c my_solution/usr/src/minix/servers/pm/forkexit.c
--- original_source/usr/src/minix/servers/pm/forkexit.c	2014-09-13 23:56:50.000000000 +0200
+++ my_solution/usr/src/minix/servers/pm/forkexit.c	2023-05-14 21:41:51.049657000 +0200
@@ -85,6 +85,12 @@ int do_fork()
   procs_in_use++;
   *rmc = *rmp;			/* copy parent's process slot to child's */
   rmc->mp_parent = who_p;			/* record child's parent */
+
+  /*Changed by mw431552*/
+  rmc->balance = INIT_BALANCE;
+
+
+
   if (!(rmc->mp_trace_flags & TO_TRACEFORK)) {
 	rmc->mp_tracer = NO_TRACER;		/* no tracer attached */
 	rmc->mp_trace_flags = 0;
diff -rupNEZbB original_source/usr/src/minix/servers/pm/main.c my_solution/usr/src/minix/servers/pm/main.c
--- original_source/usr/src/minix/servers/pm/main.c	2014-09-13 23:56:50.000000000 +0200
+++ my_solution/usr/src/minix/servers/pm/main.c	2023-05-15 00:17:17.344542281 +0200
@@ -147,6 +147,8 @@ static int sef_cb_init_fresh(int UNUSED(
   for (rmp=&mproc[0]; rmp<&mproc[NR_PROCS]; rmp++) {
 	init_timer(&rmp->mp_timer);
 	rmp->mp_magic = MP_MAGIC;
+	/* Changed by mw431552*/
+	rmp->balance = INIT_BALANCE;
   }
 
   /* Build the set of signals which cause core dumps, and the set of signals
diff -rupNEZbB original_source/usr/src/minix/servers/pm/Makefile my_solution/usr/src/minix/servers/pm/Makefile
--- original_source/usr/src/minix/servers/pm/Makefile	2014-09-13 23:56:50.000000000 +0200
+++ my_solution/usr/src/minix/servers/pm/Makefile	2023-05-14 21:41:54.849685000 +0200
@@ -4,7 +4,7 @@
 PROG=	pm
 SRCS=	main.c forkexit.c exec.c time.c alarm.c \
 	signal.c utility.c table.c trace.c getset.c misc.c \
-	profile.c mcontext.c schedule.c
+	profile.c mcontext.c schedule.c do_transfer_money.c
 
 DPADD+=	${LIBSYS} ${LIBTIMERS}
 LDADD+=	-lsys -ltimers
@@ -13,5 +13,7 @@ CPPFLAGS.main.c+=	-I${NETBSDSRCDIR}/mini
 CPPFLAGS.misc.c+=	-I${NETBSDSRCDIR}/minix
 CPPFLAGS.schedule.c+=	-I${NETBSDSRCDIR}/minix
 CPPFLAGS.utility.c+=	-I${NETBSDSRCDIR}/minix
+CPPFLAGS.do_transfer_money.c+=	-I${NETBSDSRCDIR}/minix
+
 
 .include <minix.service.mk>
diff -rupNEZbB original_source/usr/src/minix/servers/pm/mproc.h my_solution/usr/src/minix/servers/pm/mproc.h
--- original_source/usr/src/minix/servers/pm/mproc.h	2014-09-13 23:56:50.000000000 +0200
+++ my_solution/usr/src/minix/servers/pm/mproc.h	2023-05-14 21:41:58.117708000 +0200
@@ -70,6 +70,10 @@ EXTERN struct mproc {
   char mp_name[PROC_NAME_LEN];	/* process name */
 
   int mp_magic;			/* sanity check, MP_MAGIC */
+
+  int balance;      /* Changed by mw41552
+                    amount of stored money*/
+
 } mproc[NR_PROCS];
 
 /* Flag values */
diff -rupNEZbB original_source/usr/src/minix/servers/pm/proto.h my_solution/usr/src/minix/servers/pm/proto.h
--- original_source/usr/src/minix/servers/pm/proto.h	2014-09-13 23:56:50.000000000 +0200
+++ my_solution/usr/src/minix/servers/pm/proto.h	2023-05-14 21:42:00.673727000 +0200
@@ -89,3 +89,6 @@ struct mproc *find_proc(pid_t lpid);
 int nice_to_priority(int nice, unsigned *new_q);
 int pm_isokendpt(int ep, int *proc);
 void tell_vfs(struct mproc *rmp, message *m_ptr);
+
+/* Changed by mw431552. */
+int do_transfer_money(void);
diff -rupNEZbB original_source/usr/src/minix/servers/pm/table.c my_solution/usr/src/minix/servers/pm/table.c
--- original_source/usr/src/minix/servers/pm/table.c	2014-09-13 23:56:50.000000000 +0200
+++ my_solution/usr/src/minix/servers/pm/table.c	2023-05-14 21:42:04.357754000 +0200
@@ -58,5 +58,9 @@ int (* const call_vec[NR_PM_CALLS])(void
 	CALL(PM_EXEC_RESTART)	= do_execrestart,
 	CALL(PM_GETEPINFO)	= do_getepinfo,		/* getepinfo(2) */
 	CALL(PM_GETPROCNR)	= do_getprocnr,		/* getprocnr(2) */
-	CALL(PM_GETSYSINFO)	= do_getsysinfo		/* getsysinfo(2) */
+	CALL(PM_GETSYSINFO)	= do_getsysinfo,		/* getsysinfo(2) */
+
+	/* Changed by mw431552. */
+	CALL(PM_TRANSFER_MONEY)	= do_transfer_money	/* transfer_money(2) */
+
 };
